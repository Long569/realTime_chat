========================= 
ðŸŽ¨ EWT-06: DrawRT 3.0 ðŸŽ¨
=========================

dotnet dev-certs https --trust
dotnet watch run

* Data files = EWT-06.zip

DrawRT 1.0 --> Draw with lines
DrawRT 2.0 --> Draw with lines + curves
DrawRT 3.0 --> SignalR real-time features

1. Real-time communication

   ---------     ------------
      Hub           Client 
   ---------     ------------
   SendLine  --> ReceiveLine
   SendCurve --> ReceiveCurve
   SendImage --> ReceiveImage *** message size limit 128KB ***
   SendClear --> ReceiveClear


2. Commands history
   - Newly joined client cannot see previous drawing
   - Send commands history to newly joined client
   
   ----------------     ---------------
         Hub                Client 
   ----------------     ---------------
   OnConnectedAsync --> ReceiveCommands


3. From promise to async-await pattern

(a) Promise
-----------
function load() {
   fetch('data.json')
      .then(resp => resp.json())
      .then(json => data = json);
}

(b) Async-await
---------------
function async load() {
   let resp = await fetch('data.json');
   let json = await resp.json();
   data = json;
}


Improvements
------------
NOTE: Canvas --> Easy, but less flexible
      SVG -----> Difficult, but more flexible

- Groups --> clients in the same group draw on the same canvas
- Editors and viewers --> editors draw, viewers see
- Multiple drawings --> homepage shows all drawings, but clients draw separately
- Persist drawings --> store the final canvas (dataURL) in memory (shared)
                   --> OR in local storage (private)
- Undo and redo (each complete action)
    ** complete action --> pointerup + pointerout
    ** store canvas dataURLs in local storage
    ** easier for 1-person drawings
    ** multi-person drawings --> need to redesign the flow
- Redesign the drawing flow
    ** Currently --> share each line or curve
    ** New --> share each complete action
- Image drag and drop
    ** can resize + rotate
    ** at different X and Y
- Webcam integration (capture and update canvas)
    ** can resize + rotate
    ** at different X and Y
- Smiley stickers (smaller images within canvas)
    ** can resize + rotate
    ** at different X and Y
- Screenshot (Screen Capture API)
- Username and count (who are connected)
- Different pens (pencil, pen, highlighter, etc)
    ** adjust shadowBlur + shadowColor
    ** adjust strokeStyle --> transparent color
- Different line styles (solid, dotted, dashed, etc)
    ** difficult for current drawing method
    ** easier for straight lines
- Draw straight lines
    ** Example: click 2 points
    ** solid, dotted, dashed, etc
- Different shapes (circle, triangle, rectangle, etc)
    ** Example: click multiple points
    ** solid, dotted, dashed, etc
    ** stroke (outline) and fill (body)
- Draw text
    ** font, size, color and location
- Right-click as eraser (dynamic cursor image)
- Dynamic cursor image
    ** different cursors for different colors
    ** different cursors for different mode (pen or eraser)
- Incorporate with chat
Others...